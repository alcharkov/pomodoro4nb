package org.matveev.pomodoro4nb.prefs;

import javax.swing.JCheckBox;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import static org.matveev.pomodoro4nb.prefs.DefaultPreferencesProvider.*;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 *
 * @author Alexey Matveev
 */
public final class PreferencesDialog extends javax.swing.JPanel {

    private final PreferencesProvider provider;
    
    private PreferencesDialog(PreferencesProvider provider) {
        this.provider = provider;
        initComponents();
        updateComponentsWithPrefs();
    }

    
    public static void createPreferencesDialog(PreferencesProvider provider) {
        PreferencesDialog dialog = new PreferencesDialog(provider);

        NotifyDescriptor descriptor = new NotifyDescriptor(
                dialog,
                "Preferences",
                NotifyDescriptor.OK_CANCEL_OPTION,
                NotifyDescriptor.PLAIN_MESSAGE,
                null,
                NotifyDescriptor.OK_OPTION);

        if (DialogDisplayer.getDefault().notify(descriptor) == NotifyDescriptor.OK_OPTION) {
            dialog.updatePreferences();
        }
    }
    
    private void updateComponentsWithPrefs() {
        enableReminderCheckbox.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                final JCheckBox box = (JCheckBox) e.getSource();
                reminderIntervalSpinner.setEnabled(box.isSelected());
            }
        });
        
        
         pomodoroLengthSpinner.setValue(provider.getInteger(POMODORO_LENGTH_KEY,
                 DefaultPreferencesProvider.DEFAULT_POMODORO_LENGTH));
         shorBreakLengthSpinner.setValue(provider.getInteger(SHORT_BREAK_LENGTH_KEY,
                 DefaultPreferencesProvider.DEFAULT_SHORT_BREAK_LENGTH));
         longBreakLengthSpinner.setValue(provider.getInteger(LONG_BREAK_LENGTH_KEY,
                 DefaultPreferencesProvider.DEFAULT_LONG_BREAK_LENGTH));
         longBreakIntervalSpinner.setValue(provider.getInteger(LONG_BREAK_INTERVAL_KEY,
                 DefaultPreferencesProvider.DEFAULT_LONG_BREAK_INTERVAL));
         enableSoundsCheckbox.setSelected(provider.getBoolean(ENABLE_SOUNDS_KEY, true));
         enableReminderCheckbox.setSelected(provider.getBoolean(ENABLE_REMINDER_KEY, true));
         reminderIntervalSpinner.setEnabled(provider.getBoolean(ENABLE_REMINDER_KEY, true));

    }
    
    protected void updatePreferences() {
        provider.setInteger(POMODORO_LENGTH_KEY, (Integer) pomodoroLengthSpinner.getValue());
        provider.setInteger(SHORT_BREAK_LENGTH_KEY, (Integer) shorBreakLengthSpinner.getValue());
        provider.setInteger(LONG_BREAK_LENGTH_KEY, (Integer) longBreakLengthSpinner.getValue());
        provider.setInteger(LONG_BREAK_INTERVAL_KEY, (Integer) longBreakIntervalSpinner.getValue());
        provider.setInteger(REMINDER_INTERVAL_KEY, (Integer) reminderIntervalSpinner.getValue());
        provider.setBoolean(ENABLE_SOUNDS_KEY, enableSoundsCheckbox.isSelected());
        provider.setBoolean(ENABLE_REMINDER_KEY, enableReminderCheckbox.isSelected());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        timingPanel = new javax.swing.JPanel();
        pomodoroLengthLabel = new javax.swing.JLabel();
        pomodoroLengthSpinner = new javax.swing.JSpinner();
        shortBreakLengthLabel = new javax.swing.JLabel();
        longBreakLengthLabel = new javax.swing.JLabel();
        longBreakInterval = new javax.swing.JLabel();
        shorBreakLengthSpinner = new javax.swing.JSpinner();
        longBreakLengthSpinner = new javax.swing.JSpinner();
        longBreakIntervalSpinner = new javax.swing.JSpinner();
        reminderPanel = new javax.swing.JPanel();
        enableReminderCheckbox = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        reminderIntervalSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        enableSoundsCheckbox = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        pomodoroLengthLabel.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.pomodoroLengthLabel.text")); // NOI18N

        pomodoroLengthSpinner.setModel(new javax.swing.SpinnerNumberModel(25, 1, 60, 1));
        pomodoroLengthSpinner.setPreferredSize(new java.awt.Dimension(50, 20));

        shortBreakLengthLabel.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.shortBreakLengthLabel.text")); // NOI18N

        longBreakLengthLabel.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.longBreakLengthLabel.text")); // NOI18N

        longBreakInterval.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.longBreakInterval.text")); // NOI18N

        shorBreakLengthSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 1, 60, 1));
        shorBreakLengthSpinner.setPreferredSize(new java.awt.Dimension(50, 20));

        longBreakLengthSpinner.setModel(new javax.swing.SpinnerNumberModel(30, 1, 60, 1));
        longBreakLengthSpinner.setPreferredSize(new java.awt.Dimension(50, 20));

        longBreakIntervalSpinner.setModel(new javax.swing.SpinnerNumberModel(4, 1, 10, 1));
        longBreakIntervalSpinner.setPreferredSize(new java.awt.Dimension(50, 20));

        javax.swing.GroupLayout timingPanelLayout = new javax.swing.GroupLayout(timingPanel);
        timingPanel.setLayout(timingPanelLayout);
        timingPanelLayout.setHorizontalGroup(
            timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timingPanelLayout.createSequentialGroup()
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timingPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pomodoroLengthLabel)
                            .addComponent(shortBreakLengthLabel)
                            .addComponent(longBreakLengthLabel)))
                    .addGroup(timingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(longBreakInterval)))
                .addGap(31, 31, 31)
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(longBreakLengthSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shorBreakLengthSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longBreakIntervalSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pomodoroLengthSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 203, Short.MAX_VALUE))
        );
        timingPanelLayout.setVerticalGroup(
            timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timingPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pomodoroLengthLabel)
                    .addComponent(pomodoroLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shortBreakLengthLabel)
                    .addComponent(shorBreakLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longBreakLengthLabel)
                    .addComponent(longBreakLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longBreakIntervalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(longBreakInterval))
                .addGap(6, 6, 6))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.timingPanel.TabConstraints.tabTitle"), timingPanel); // NOI18N

        enableReminderCheckbox.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.enableReminderCheckbox.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.jLabel5.text")); // NOI18N

        reminderIntervalSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 60, 1));
        reminderIntervalSpinner.setMinimumSize(new java.awt.Dimension(60, 20));
        reminderIntervalSpinner.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel2.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout reminderPanelLayout = new javax.swing.GroupLayout(reminderPanel);
        reminderPanel.setLayout(reminderPanelLayout);
        reminderPanelLayout.setHorizontalGroup(
            reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reminderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enableReminderCheckbox)
                    .addGroup(reminderPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reminderIntervalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        reminderPanelLayout.setVerticalGroup(
            reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reminderPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enableReminderCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(reminderIntervalSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.reminderPanel.TabConstraints.tabTitle"), reminderPanel); // NOI18N

        enableSoundsCheckbox.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.enableSoundsCheckbox.text")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.jTextField1.text")); // NOI18N
        jTextField1.setEnabled(false);

        jButton1.setText(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.jButton1.text")); // NOI18N
        jButton1.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(enableSoundsCheckbox))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enableSoundsCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(PreferencesDialog.class, "PreferencesDialog.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox enableReminderCheckbox;
    private javax.swing.JCheckBox enableSoundsCheckbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel longBreakInterval;
    private javax.swing.JSpinner longBreakIntervalSpinner;
    private javax.swing.JLabel longBreakLengthLabel;
    private javax.swing.JSpinner longBreakLengthSpinner;
    private javax.swing.JLabel pomodoroLengthLabel;
    private javax.swing.JSpinner pomodoroLengthSpinner;
    private javax.swing.JSpinner reminderIntervalSpinner;
    private javax.swing.JPanel reminderPanel;
    private javax.swing.JSpinner shorBreakLengthSpinner;
    private javax.swing.JLabel shortBreakLengthLabel;
    private javax.swing.JPanel timingPanel;
    // End of variables declaration//GEN-END:variables
}
