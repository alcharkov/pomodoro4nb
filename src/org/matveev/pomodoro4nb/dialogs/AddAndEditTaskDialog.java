package org.matveev.pomodoro4nb.dialogs;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;
import org.matveev.pomodoro4nb.task.Task;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

/**
 *
 * @author Alexey Matveev
 */
public class AddAndEditTaskDialog extends javax.swing.JPanel {

    private static final String SHOULD_ENABLE_OK_BUTTON_PROPERTY = "enableOkButton";
    
    private Task taskToEdit;
    
    /** Creates new form AddTaskDialog */
    public AddAndEditTaskDialog(Task toEdit) {
        this.taskToEdit = toEdit;
        initComponents();
        configureComponents();
    }

    public static Task createAddTaskDialog() {
        return createAddTaskDialog(null);
    }
    
    public static Task createAddTaskDialog(Task toEdit) {
        AddAndEditTaskDialog dialog = new AddAndEditTaskDialog(toEdit);
        final NotifyDescriptor descriptor = new NotifyDescriptor(
                dialog,
                org.openide.util.NbBundle.getMessage(AddAndEditTaskDialog.class, "AddTaskDialog.title"),
                NotifyDescriptor.OK_CANCEL_OPTION,
                NotifyDescriptor.PLAIN_MESSAGE,
                null,
                NotifyDescriptor.OK_OPTION);
        descriptor.setValid(toEdit != null);


        dialog.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (SHOULD_ENABLE_OK_BUTTON_PROPERTY.equals(evt.getPropertyName())) {
                    descriptor.setValid(Boolean.TRUE.equals(evt.getNewValue()));
                }
            }
        });

        if (DialogDisplayer.getDefault().notify(descriptor) == NotifyDescriptor.OK_OPTION) {
            return dialog.getTask();
        }
        return dialog.getEditableTask();
    }

    /*package*/ Task getEditableTask() {
        return taskToEdit;
    }

    
    /*package*/ Task getTask() {
        String desc = descriptionField.getText();
        return (desc != null && !desc.isEmpty())
                ? Task.createTask(desc, (Integer) estimateSpinner.getValue())
                : null;
    }

    private void configureComponents() {
        if(taskToEdit != null) {
            descriptionField.setText(taskToEdit.getProperty(Task.Description));
            estimateSpinner.setValue(taskToEdit.getProperty(Task.Estimate));
        }
        
        descriptionField.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                check(e.getDocument());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                check(e.getDocument());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                check(e.getDocument());
            }

            private void check(final Document doc) {
                boolean isValid = doc.getLength() > 0;
                firePropertyChange(SHOULD_ENABLE_OK_BUTTON_PROPERTY, !isValid, isValid);
            }
        });

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        contentPanel = new javax.swing.JPanel();
        descriptionLabel = new javax.swing.JLabel();
        estimateLabel = new javax.swing.JLabel();
        descriptionField = new javax.swing.JTextField();
        estimateSpinner = new javax.swing.JSpinner();

        setLayout(new java.awt.GridBagLayout());

        contentPanel.setLayout(new java.awt.GridBagLayout());

        descriptionLabel.setText(org.openide.util.NbBundle.getMessage(AddAndEditTaskDialog.class, "AddAndEditTaskDialog.descriptionLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        contentPanel.add(descriptionLabel, gridBagConstraints);

        estimateLabel.setText(org.openide.util.NbBundle.getMessage(AddAndEditTaskDialog.class, "AddAndEditTaskDialog.estimateLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        contentPanel.add(estimateLabel, gridBagConstraints);

        descriptionField.setText(org.openide.util.NbBundle.getMessage(AddAndEditTaskDialog.class, "AddAndEditTaskDialog.descriptionField.text")); // NOI18N
        descriptionField.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        contentPanel.add(descriptionField, gridBagConstraints);

        estimateSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        contentPanel.add(estimateSpinner, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(contentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel estimateLabel;
    private javax.swing.JSpinner estimateSpinner;
    // End of variables declaration//GEN-END:variables
}
